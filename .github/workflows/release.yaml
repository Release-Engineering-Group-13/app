name: Release
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Parse version info from tag
        run: |
          VERSION=${GITHUB_REF:11}
          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          PATCH=$(echo "$VERSION" | cut -d . -f 3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV
      
      - name: Login to Github registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Convert repository name to lowercase
        run: |
          echo "REPO_LC=$(echo $REPO | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        env:
          REPO: ${{ github.repository }}

      - name: Build, tag, and push Docker images for frontend and backend
        run: | 
          FRONTEND_IMG=ghcr.io/${{ env.REPO_LC }}/frontend
          BACKEND_IMG=ghcr.io/${{ env.REPO_LC }}/backend

          docker build \
            -t $FRONTEND_IMG:${{ env.version }} \
            -t $FRONTEND_IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
            -t $FRONTEND_IMG:${{ env.version_major }}.latest \
            -t $FRONTEND_IMG:latest \
            -f src/app-frontend/Dockerfile src/app-frontend
          docker push --all-tags $FRONTEND_IMG

          docker build \
            -t $BACKEND_IMG:${{ env.version }} \
            -t $BACKEND_IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
            -t $BACKEND_IMG:${{ env.version_major }}.latest \
            -t $BACKEND_IMG:latest \
            -f src/app-service/Dockerfile .
          docker push --all-tags $BACKEND_IMG
